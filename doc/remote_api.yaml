openapi: 3.0.3
info:
  title: FaceMeshEditor remote api
  description: Describes the API a server should supply to work with this application
  version: 1.0.0
components:
  schemas:
    FaceMeshRequest:
      description: The FaceMeshRequest embodies an image (png/jpg) sent to the server for processing.
        The server does not necessarily save the annotations - it can but doesn't have to.
      type: object
      properties:
        image:
          type: string
          description: The file name of the image to fetch the annotations
    MeshCollection:
      description: The face meshes in a dict. The keys are the file names
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Image"
      properties:
        __id__:
          type: string
          description: the fingerprint of the device using the API
          format: hash
          pattern: '^[a-fA-F0-9]+$'
    Image:
      type: object
      properties:
        points:
          items:
            type: array
            minItems: 1
            description: Can be multiple annotations. Only the first is used.
            items:
              type: array
              items:
                $ref: '#/components/schemas/Point'
              maxLength: 472
              minLength: 472
        sha256:
          type: string
          format: sha256
          description: Only the actual image bytes are hashed.
    Error:
      type: object
      properties:
        message:
          type: string
          description: contains the error message with additional information dependent on the request
    Point:
      type: object
      description: A single point. Can be 2D or 3D. The z-coordinate is optional.
      properties:
        id:
          type: integer
          description: Unique identifier for the landmark. Must be kept intact for proper rendering.
          minimum: 0
          maximum: 477
        x:
          $ref: '#/components/schemas/Coordinate'
        y:
          $ref: '#/components/schemas/Coordinate'
        z:
          $ref: '#/components/schemas/Coordinate'
        deleted:
          type: boolean
          description: Indicates whether the landmark has been deleted or not. If not present, assumed to be false.
          default: false
      required:
        - x
        - y
    Coordinate:
      type: number
      format: float
      description: the relative position on one axis. The api might accept points outside the image, to support points 
        outside the image area.
      minimum: 0
      maximum: 1.0


paths:
  '/detect&__id__={user_id}':
    post:
      summary: An endpoint for retrieving stored annotation data or finding a new annotation.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      parameters:
        - name: user_id
          required: true
          in: path
          schema:
            type: string
            description: the fingerprint of the device using the API
            format: hash
            pattern: '^[a-fA-F0-9]+$'
      responses:
        200:
          description: Returns a target file's landmarks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshCollection'
        400:
          description: The sent image data are not readable  | No file part in the request | No selected file | Allowed file types are .png, .jpg, .jpeg
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/annotations':
    post:
      summary: Sends all present point data to the server
      responses:
        '201':
          description: Created
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeshCollection'
